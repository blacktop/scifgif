FORMAT: 1A
HOST: http://localhost:3993

# scifgif

Humorous image microservice for isolated networks - xkcd and giphy full text search API

# xkcd
xkcd comic endpoints

# giphy
Giphy GIF endpoints

# image
image endpoints

## xkcd Random [/xkcd]
### Retrieve Random xkcd Comic [GET]

## xkcd Number [/xkcd/number/{number}]
### Retrieve xkcd by Number [GET]

+ Parameters
    + number: `1319` (number, required) - The xkcd comic ID

## xkcd Search [/xkcd/search{?query}]
### Perform xkcd Search [GET]

+ Parameters
  + query: `thumbs up` (string, required) - Search terms

## xkcd Slash [/xkcd/slash{?text}]
### Post xkcd slash query [POST]

+ Parameters
  + text: `automation` (string, required) - Search terms

+ Request (application/json)

+ Response 200 (application/json; charset=UTF-8)

    + Attributes (object)
        + icon_url (string) - Slash command icon
        + response_type (string) - Mattermost response type
        + text (string) - Message text
        + username (string) - Mattermost username

    + Body

      {
          "icon_url": "http://localhost:3993/icon",
          "response_type": "in_channel",
          "text": "![gif](http://localhost:3993/images/default/xkcd.png)",
          "username": "xkcd"
      }

## xkcd Webhook [/xkcd/new_post]
### Post xkcd outgoing-webhook query [POST]

+ Attributes
  + channel_id: hawos4dqtby53pd64o4a4cmeoo  (string)
  + channel_name: town-square  (string)
  + team_domain: someteam  (string)
  + team_id: kwoknj9nwpypzgzy78wkw516qe  (string)
  + post_id: axdygg1957njfe5pu38saikdho  (string)
  + text: some+text+here  (string)
  + timestamp: 1445532266  (string)
  + token: zmigewsanbbsdf59xnmduzypjc  (string)
  + trigger_word: some  (string)
  + user_id: rnina9994bde8mua79zqcg5hmo  (string)
  + user_name: somename  (string)

+ Request (application/json)

+ Response 201

## giphy Random [/giphy]
### Retrieve Random Giphy Gif [GET]

## giphy Search [/giphy/search{?query}]
### Retrieve Giphy Search [GET]

+ Parameters
  + query: `thumbs up` (string, required) - Search terms

## giphy Slash [/giphy/slash{?text}]
### Post giphy slash query [POST]

+ Parameters
  + text: `thumbs up` (string, required) - Search terms

+ Response 200 (application/json; charset=UTF-8)

    + Attributes (object)
        + icon_url (string) - Slash command icon
        + response_type (string) - Mattermost response type
        + text (string) - Message text
        + username (string) - Mattermost username

    + Body

      {
          "icon_url": "http://localhost:3993/icon",
          "response_type": "in_channel",
          "text": "![gif](http://localhost:3993/images/default/xkcd.png)",
          "username": "scifgif"
      }

## giphy Webhook [/giphy/new_post]
### Post Giphy outgoing-webhook query [POST]

+ ```token```: Token (string, required) - Integration token
+ ```trigger_word```: Query (string, required) - Search

## image [/image/{source}/{file}]
### Retrieve Image [GET]

+ Parameters
    + source: `(xkcd|giphy)` (string, required) - The image source
    + file: `some.png` (string, required) - The image filename

### Delete Image [DELETE]
Allows users to delete possibly offensive images

+ Parameters
    + source: `(xkcd|giphy)` (string, required) - The image source
    + file: `some.png` (string, required) - The image filename

+ Response 200 (text/plain)

    + Body

      image successfully removed
